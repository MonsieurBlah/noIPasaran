var fs = require('fs');
var path = require('path');
var vm = require('vm');

var Packet = require('./packet');
var OldPacket = require('./packet_old');

var fixtureDir = path.join(__dirname, 'test', 'fixtures');

var files = fs.readdirSync(fixtureDir).filter(function (f) { return /\.js$/.test(f); });

var packets = files.map(function (file) {
  var js = 'foo=' + fs.readFileSync(path.join(fixtureDir, file));
  return vm.runInThisContext(js, file);
});


var T = 1000;

exports.compare = {
  'old': function () {
    var buff = new Buffer(4096);
    for (var i = 0; i < packets.length; i++)
      var p = OldPacket.write(buff, packets[i]);
  },
  'new': function () {
    var buff = new Buffer(4096);
    for (var i = 0; i < packets.length; i++)
      var p = Packet.write(buff, packets[i]);
  },
};
exports.compareCount = 16;
require('bench').runMain();
